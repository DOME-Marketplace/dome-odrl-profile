{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ProductSchema",
  "definitions": {
    "Catalog": {
      "title": "Catalog",
      "description": "A collection of Product Offerings, intended for a specific DistributionChannel, enhanced with additional information such as SLA parameters, invoicing and shipping details",
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "description": "Unique reference of the catalog"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the Catalog"
        },
        "description": {
          "type": "string",
          "description": "Description of this catalog"
        },
        "lastUpdate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time of the last update"
        },
        "lifecycleStatus": {
          "type": "string",
          "description": "Used to indicate the current lifecycle status"
        },
        "name": {
          "type": "string",
          "description": "Name of the catalog"
        },
        "catalogType": {
          "type": "string",
          "description": "Indicates if the catalog is a product, service or resource catalog"
        },
        "validFor": {
          "$ref": "./Common.schema.json#/definitions/TimePeriod",
          "description": "The period for which the catalog is valid"
        },
        "version": {
          "type": "string",
          "description": "Catalog version"
        },
        "relatedParty": {
          "type": "array",
          "items": {
            "$ref": "./EngagedParty.schema.json#/definitions/RelatedParty"
          },
          "description": "List of parties involved in this catalog"
        },
        "category": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryRef"
          },
          "description": "List of root categories contained in this catalog"
        }
      },
      "allOf": [
        {
          "$ref": "./Common.schema.json#/definitions/Addressable"
        },
        {
          "$ref": "./Common.schema.json#/definitions/Extensible"
        }
      ]
    },
    "CategoryRef": {
      "title": "CategoryRef",
      "description": "The category for grouping recommendations",
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "Category version"
        }
      },
      "allOf": [
        {
          "$ref": "./Common.schema.json#/definitions/EntityRef"
        }
      ]
    },
    "ProductOffering": {
      "title": "ProductOffering",
      "description": "Represents entities that are orderable from the provider of the catalog, this resource includes pricing information.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the productOffering"
        },
        "href": {
          "type": "string",
          "description": "Reference of the ProductOffering"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the productOffering"
        },
        "isBundle": {
          "type": "boolean",
          "description": "isBundle determines whether a productOffering represents a single productOffering (false), or a bundle of productOfferings (true)."
        },
        "isSellable": {
          "type": "boolean",
          "description": "A flag indicating if this product offer can be sold stand-alone for sale or not. If this flag is false it indicates that the offer can only be sold within a bundle."
        },
        "lastUpdate": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time of the last update"
        },
        "lifecycleStatus": {
          "type": "string",
          "description": "Used to indicate the current lifecycle status"
        },
        "name": {
          "type": "string",
          "description": "Name of the productOffering"
        },
        "statusReason": {
          "type": "string",
          "description": "A string providing a complementary information on the value of the lifecycle status attribute."
        },
        "validFor": {
          "$ref": "./Common.schema.json#/definitions/TimePeriod",
          "description": "The period for which the productOffering is valid"
        },
        "version": {
          "type": "string",
          "description": "ProductOffering version"
        },
        "place": {
          "type": "array",
          "items": {
            "$ref": "./Common.schema.json#/definitions/PlaceRef"
          },
          "description": "Place defines the places where the products are sold or delivered."
        },
        "serviceLevelAgreement": {
          "$ref": "./EngagedParty.schema.json#/definitions/SLARef",
          "description": "A service level agreement (SLA) is a type of agreement that represents a formal negotiated agreement between two parties designed to create a common understanding about products, services, priorities, responsibilities, and so forth. The SLA is a set of appropriate procedures and targets formally or informally agreed between parties in order to achieve and maintain specified Quality of Service."
        },
        "productSpecification": {
          "$ref": "#/definitions/ProductSpecificationRef",
          "description": "A ProductSpecification is a detailed description of a tangible or intangible object made available externally in the form of a ProductOffering to customers or other parties playing a party role."
        },
        "channel": {
          "type": "array",
          "items": {
            "$ref": "./Common.schema.json#/definitions/ChannelRef"
          },
          "description": "The channel defines the channel for selling product offerings."
        },
        "serviceCandidate": {
          "$ref": "./Service.schema.json#/definitions/ServiceCandidateRef",
          "description": "ServiceCandidate is an entity that makes a ServiceSpecification available to a catalog."
        },
        "category": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryRef"
          },
          "description": "The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other categories and/or product offerings, resource or service candidates."
        },
        "resourceCandidate": {
          "$ref": "./Resource.schema.json#/definitions/ResourceCandidateRef",
          "description": "A resource candidate is an entity that makes a ResourceSpecification available to a catalog."
        },
        "productOfferingTerm": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductOfferingTerm"
          },
          "description": "A condition under which a ProductOffering is made available to Customers. For instance, a productOffering can be offered with multiple commitment periods."
        },
        "productOfferingPrice": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductOfferingPriceRef"
          },
          "description": "An amount, usually of money, that is asked for or allowed when a ProductOffering is bought, rented, or leased. The price is valid for a defined period of time and may not represent the actual price paid by a customer."
        },
        "agreement": {
          "type": "array",
          "items": {
            "$ref": "./EngagedParty.schema.json#/definitions/AgreementRef"
          },
          "description": "An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications."
        },
        "attachment": {
          "type": "array",
          "items": {
            "$ref": "./Common.schema.json#/definitions/AttachmentRefOrValue"
          },
          "description": "Complements the description of an element (for instance a product) through video, pictures..."
        },
        "marketSegment": {
          "type": "array",
          "items": {
            "$ref": "./MarketingSales.schema.json#/definitions/MarketSegmentRef"
          },
          "description": "provides references to the corresponding market segment as target of product offerings. A market segment is grouping of Parties, GeographicAreas, SalesChannels, and so forth."
        },
        "bundledProductOffering": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BundledProductOffering"
          },
          "description": "A type of ProductOffering that belongs to a grouping of ProductOfferings made available to the market. It inherits of all attributes of ProductOffering."
        },
        "prodSpecCharValueUse": {
          "type": "array",
          "items": {
            "$ref": "./Product.schema.json#/definitions/ProductSpecificationCharacteristicValueUse"
          },
          "description": "A use of the ProductSpecificationCharacteristicValue by a ProductOffering to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering level. For example, a characteristic 'Color' might have values White, Blue, Green, and Red. But, the list of values can be restricted to e.g. White and Blue in an associated product offering. It should be noted that the list of values in 'ProductSpecificationCharacteristicValueUse' is a strict subset of the list of values as defined in the corresponding product specification characteristics."
        }
      },
      "allOf": [
        {
          "$ref": "./Common.schema.json#/definitions/Addressable"
        },
        {
          "$ref": "./Common.schema.json#/definitions/Extensible"
        }
      ]
    },
    "ProductSpecificationRef": {
      "title": "ProductSpecificationRef",
      "description": "Product specification reference: A ProductSpecification is a detailed description of a tangible or intangible object made available externally in the form of a ProductOffering to customers or other parties playing a party role.",
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "Version of the product specification"
        },
        "targetProductSchema": {
          "description": "A target product schema reference. The reference object to the schema and type of target product which is described by product specification.",
          "$ref": "#/definitions/TargetProductSchema"
        }
      },
      "allOf": [
        {
          "$ref": "./Common.schema.json#/definitions/EntityRef"
        }
      ]
    },
    "ProductOfferingTerm": {
      "title": "ProductOfferingTerm",
      "description": "A condition under which a ProductOffering is made available to Customers. For instance, a productOffering can be offered with multiple commitment periods.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the productOfferingTerm"
        },
        "duration": {
          "$ref": "./Common.schema.json#/definitions/Quantity",
          "description": "Duration of the productOfferingTerm"
        },
        "name": {
          "type": "string",
          "description": "Name of the productOfferingTerm"
        },
        "validFor": {
          "$ref": "./Common.schema.json#/definitions/TimePeriod",
          "description": "The period for which the productOfferingTerm is valid"
        }
      },
      "allOf": [
        {
          "$ref": "./Common.schema.json#/definitions/Extensible"
        }
      ]
    },
    "ProductOfferingPriceRef": {
      "title": "ProductOfferingPriceRef",
      "description": "ProductPriceOffering reference. An amount, usually of money, that is asked for or allowed when a ProductOffering is bought, rented, or leased",
      "type": "object",
      "properties": {},
      "allOf": [
        {
          "$ref": "./Common.schema.json#/definitions/EntityRef"
        }
      ]
    },
    "BundledProductOffering": {
      "title": "BundledProductOffering",
      "description": "A type of ProductOffering that belongs to a grouping of ProductOfferings made available to the market. It inherits of all attributes of ProductOffering.",
      "type": "object",
      "properties": {
        "href": {
          "type": "string",
          "description": "Unique reference of the BundledProductOffering"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the BundledProductOffering"
        },
        "lifecycleStatus": {
          "type": "string",
          "description": "Used to indicate the current lifecycle status"
        },
        "name": {
          "type": "string",
          "description": "Name of the BundledProductOffering"
        },
        "bundledProductOfferingOption": {
          "$ref": "#/definitions/BundledProductOfferingOption",
          "description": "A set of numbers that specifies the lower and upper limits for a ProductOffering that can be procured as part of the related BundledProductOffering. Values can range from 0 to unbounded."
        }
      },
      "allOf": [
        {
          "$ref": "./Common.schema.json#/definitions/Extensible"
        }
      ]
    },
    "BundledProductOfferingOption": {
      "title": "BundledProductOfferingOption",
      "type": "object",
      "description": "A set of numbers that specifies the lower and upper limits for a ProductOffering that can be procured as part of the related BundledProductOffering. Values can range from 0 to unbounded",
      "properties": {
        "numberRelOfferDefault": {
          "type": "integer",
          "description": "Default number of produc offereings that should be procured as part of the related BundledProductOffering"
        },
        "numberRelOfferLowerLimit": {
          "type": "integer",
          "description": "lower limit for a product offering that can be procured as part of the related BundledProductOffering"
        },
        "numberRelOfferUpperLimit": {
          "type": "integer",
          "description": "upper limit for a product offering that can be procured as part of the related BundledProductOffering"
        }
      },
      "allOf": [
        {
          "$ref": "./Common.schema.json#/definitions/Extensible"
        }
      ]
    },
    "ProductSpecificationCharacteristicValueUse": {
      "title": "ProductSpecificationCharacteristicValueUse",
      "description": "A use of the ProductSpecificationCharacteristicValue by a ProductOffering to which additional properties (attributes) apply or override the properties of similar properties contained in ProductSpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding product specification. The available characteristic values for a ProductSpecificationCharacteristic in a Product specification can be modified at the ProductOffering level. For example, a characteristic 'Color' might have values White, Blue, Green, and Red. But, the list of values can be restricted to e.g. White and Blue in an associated product offering. It should be noted that the list of values in 'ProductSpecificationCharacteristicValueUse' is a strict subset of the list of values as defined in the corresponding product specification characteristics.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the associated productSpecificationCharacteristic"
        },
        "id": {
          "type": "string",
          "description": "Unique ID for the characteristic"
        },
        "description": {
          "type": "string",
          "description": "A narrative that explains in detail what the productSpecificationCharacteristic is"
        },
        "valueType": {
          "type": "string",
          "description": "A kind of value that the characteristic can take on, such as numeric, text and so forth"
        },
        "minCardinality": {
          "type": "integer",
          "description": "The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality."
        },
        "maxCardinality": {
          "type": "integer",
          "description": "The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality."
        },
        "validFor": {
          "$ref": "./Common.schema.json#/definitions/TimePeriod",
          "description": "The period for which the productSpecificationCharacteristic is valid"
        },
        "productSpecCharacteristicValue": {
          "type": "array",
          "items": {
            "$ref": "./Common.schema.json#/definitions/CharacteristicValueSpecification"
          },
          "description": "A number or text that can be assigned to a ProductSpecificationCharacteristic."
        },
        "productSpecification": {
          "$ref": "#/definitions/ProductSpecificationRef",
          "description": "A ProductSpecification is a detailed description of a tangible or intangible object made available externally in the form of a ProductOffering to customers or other parties playing a party role."
        }
      },
      "allOf": [
        {
          "$ref": "./Common.schema.json#/definitions/Extensible"
        }
      ]
    },
    "TargetProductSchema": {
      "title": "TargetProductSchema",
      "description": "The reference object to the schema and type of target product which is described by product specification",
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "Class type of the target product"
        },
        "@schemaLocation": {
          "type": "string",
          "format": "uri",
          "description": "This field provides a link to the schema describing the target product"
        }
      },
      "required": [
        "@type",
        "@schemaLocation"
      ]
    }
  }
}